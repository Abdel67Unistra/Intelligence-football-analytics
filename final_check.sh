#!/bin/sh

echo "üèÜ FOOTBALL ANALYTICS PLATFORM - VALIDATION FINALE"
echo "=================================================="
echo "Date: $(date)"
echo "Utilisateur: $(whoami)"
echo "R√©pertoire: $(pwd)"
echo ""

# Couleurs pour l'affichage
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

success_count=0
total_checks=8

# Function pour afficher les r√©sultats
check_result() {
    if [ $1 -eq 0 ]; then
        echo -e "${GREEN}‚úÖ $2${NC}"
        ((success_count++))
    else
        echo -e "${RED}‚ùå $2${NC}"
    fi
}

echo "üîç V√âRIFICATIONS SYST√àME"
echo "------------------------"

# 1. V√©rification Python
python3 --version > /dev/null 2>&1
check_result $? "Python 3 install√©"

# 2. V√©rification packages Python essentiels
python3 -c "import pandas, numpy, streamlit, matplotlib" > /dev/null 2>&1
check_result $? "Packages Python essentiels disponibles"

# 3. V√©rification structure du projet
if [ -f "python_analytics/dashboards/coach_interface.py" ] && [ -f "database/sql/create_schema.sql" ]; then
    check_result 0 "Structure du projet compl√®te"
else
    check_result 1 "Structure du projet compl√®te"
fi

# 4. V√©rification fichiers de configuration
if [ -f ".env.example" ] && [ -f "requirements.txt" ]; then
    check_result 0 "Fichiers de configuration pr√©sents"
else
    check_result 1 "Fichiers de configuration pr√©sents"
fi

# 5. V√©rification Git repository
if [ -d ".git" ] && git remote get-url origin > /dev/null 2>&1; then
    check_result 0 "Repository Git configur√©"
else
    check_result 1 "Repository Git configur√©"
fi

# 6. V√©rification modules Python
python3 -c "
import sys
sys.path.insert(0, '.')
from python_analytics.modules.performance_analyzer import FootballMetrics
print('Import r√©ussi')
" > /dev/null 2>&1
check_result $? "Modules Football Analytics importables"

# 7. V√©rification R (optionnel)
if command -v Rscript > /dev/null 2>&1; then
    if [ -f "r_analytics/scripts/predictive_models.R" ]; then
        check_result 0 "Scripts R Analytics disponibles"
    else
        check_result 1 "Scripts R Analytics disponibles"
    fi
else
    echo -e "${YELLOW}‚ö†Ô∏è  R non install√© (optionnel)${NC}"
    ((success_count++)) # On compte comme succ√®s car R est optionnel
fi

# 8. Test de syntaxe Streamlit
streamlit --help > /dev/null 2>&1
if [ $? -eq 0 ]; then
    check_result 0 "Streamlit accessible"
else
    check_result 1 "Streamlit accessible"
fi

echo ""
echo "üìä R√âSULTATS"
echo "------------"
echo -e "Score: ${BLUE}$success_count/$total_checks${NC}"

if [ $success_count -eq $total_checks ]; then
    echo -e "${GREEN}üéâ PLATEFORME ENTI√àREMENT OP√âRATIONNELLE !${NC}"
    echo ""
    echo "üöÄ COMMANDES DE D√âMARRAGE:"
    echo "  Dashboard: streamlit run python_analytics/dashboards/coach_interface.py"
    echo "  Jupyter:   jupyter lab notebooks/"
    echo "  Tests:     python simple_test.py"
    echo ""
    echo "üåê ACC√àS:"
    echo "  Dashboard: http://localhost:8501"
    echo "  Jupyter:   http://localhost:8888"
    echo "  GitHub:    https://github.com/Abdel67Unistra/Intelligence-football-analytics"
    
elif [ $success_count -ge 6 ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  PLATEFORME FONCTIONNELLE AVEC LIMITATIONS${NC}"
    echo "La plupart des fonctionnalit√©s sont disponibles."
    echo "Consultez les erreurs ci-dessus pour les am√©liorations."
    
else
    echo -e "${RED}‚ùå PROBL√àMES D√âTECT√âS${NC}"
    echo "Veuillez r√©soudre les erreurs avant d'utiliser la plateforme."
    echo ""
    echo "üí° SOLUTIONS:"
    echo "  1. Installer les d√©pendances: pip install -r requirements.txt"
    echo "  2. Configurer l'environnement: cp .env.example .env"
    echo "  3. Ex√©cuter les tests: python simple_test.py"
fi

echo ""
echo "üìö DOCUMENTATION:"
echo "  README.md - Guide complet"
echo "  QUICK_START.md - D√©marrage rapide"
echo "  ACCOMPLISHMENTS.md - √âtat des fonctionnalit√©s"

exit $((total_checks - success_count))
